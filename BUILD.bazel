load("@bazel_skylib//rules:common_settings.bzl", "bool_flag")
load("@bazel_skylib//rules:copy_file.bzl", "copy_file")
load("@rules_cc//cc:defs.bzl", "cc_library")
load("//bazel:copts.bzl", "cxxopts")

# NOTE: the defaults for these settings are intended to match the defaults in CMakeLists.txt
bool_flag(name = "enable", build_setting_default = True, visibility = ["//visibility:public"])
config_setting(name = "_enable", flag_values = {":enable": "True"})

bool_flag(name = "broadcast", build_setting_default = True, visibility = ["//visibility:public"])
config_setting(name = "_broadcast", flag_values = {":broadcast": "True"})

bool_flag(name = "on_demand", build_setting_default = False, visibility = ["//visibility:public"])
config_setting(name = "_on_demand", flag_values = {":on_demand": "True"})

bool_flag(name = "fibers", build_setting_default = False, visibility = ["//visibility:public"])
config_setting(name = "_fibers", flag_values = {":fibers": "True"})

cc_library(
    name = "TracyClient",
    strip_include_prefix = "public",
    visibility = ["//visibility:public"],
    cxxopts = select({
        "@rules_cc//cc/compiler:msvc-cl": ["/std:c++20"],
        "//conditions:default": ["-std=c++20"],
    }),
    defines =
        select({":_enable": ["TRACY_ENABLE"], "//conditions:default": []}) +
        select({":_broadcast": [], "//conditions:default": ["TRACY_NO_BROADCAST"]}) +
        select({":_on_demand": ["TRACY_ON_DEMAND"], "//conditions:default": []}) +
        select({":_fibers": ["TRACY_FIBERS"], "//conditions:default": []}),
    includes = ["public"],
    hdrs = glob(["public/**/*"]),
    srcs = ["public/TracyClient.cpp"],
)

alias(name = "tracy", actual = ":TracyClient", visibility = ["//visibility:public"])
